{
  "anchorIds": {
    "SkyGridMessageType": "enumeration-skygridmessagetype",
    "SkyGridColumnComponent": "class-skygridcolumncomponent",
    "SkyGridComponent": "class-skygridcomponent",
    "SkyGridModule": "class-skygridmodule",
    "SkyGridColumnWidthModelChange": "interface-skygridcolumnwidthmodelchange",
    "SkyGridMessage": "interface-skygridmessage",
    "SkyGridSelectedRowsModelChange": "interface-skygridselectedrowsmodelchange",
    "SkyGridColumnAlignment": "type-alias-skygridcolumnalignment"
  },
  "typedoc": {
    "id": 0,
    "name": "@skyux/grids",
    "kind": 1,
    "kindString": "Project",
    "flags": {},
    "originalName": "",
    "children": [
      {
        "id": 54,
        "name": "SkyGridMessageType",
        "kind": 8,
        "kindString": "Enumeration",
        "flags": {},
        "comment": {
          "tags": [
            {
              "tag": "deprecated",
              "text": "`SkyGridComponent` and its features are deprecated. We recommend using the data grid instead. For more information, see https://developer.blackbaud.com/skyux/components/data-grid\n"
            }
          ]
        },
        "children": [
          {
            "id": 56,
            "name": "ClearAll",
            "kind": 16,
            "kindString": "Enumeration member",
            "flags": {},
            "comment": {
              "shortText": "Clears the multiselect checkboxes for all rows in the grid."
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/types/grid-message-type.ts",
                "line": 13,
                "character": 2
              }
            ],
            "defaultValue": "1"
          },
          {
            "id": 55,
            "name": "SelectAll",
            "kind": 16,
            "kindString": "Enumeration member",
            "flags": {},
            "comment": {
              "shortText": "Selects the multiselect checkboxes for all rows in the grid."
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/types/grid-message-type.ts",
                "line": 8,
                "character": 2
              }
            ],
            "defaultValue": "0"
          }
        ],
        "groups": [
          {
            "title": "Enumeration members",
            "kind": 16,
            "children": [56, 55]
          }
        ],
        "sources": [
          {
            "fileName": "projects/grids/src/modules/grid/types/grid-message-type.ts",
            "line": 4,
            "character": 12
          }
        ]
      },
      {
        "id": 77,
        "name": "SkyGridColumnComponent",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "shortText": "Specifies the column information.",
          "tags": [
            {
              "tag": "deprecated",
              "text": "`SkyGridComponent` and its features are deprecated. We recommend using the data grid instead. For more information, see https://developer.blackbaud.com/skyux/components/data-grid\n"
            }
          ]
        },
        "decorators": [
          {
            "name": "Component",
            "type": {
              "type": "reference",
              "qualifiedName": "ComponentDecorator",
              "package": "@angular/core",
              "name": "Component"
            },
            "arguments": {
              "obj": "{\n  selector: 'sky-grid-column',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
            }
          }
        ],
        "children": [
          {
            "id": 80,
            "name": "alignment",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies the horizontal alignment of the column's data and header.\nOptions include: `\"left\"`, `\"center\"`, and `\"right\"`.",
              "tags": [
                {
                  "tag": "default",
                  "text": "\"left\"\n"
                }
              ]
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 34,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "id": 27,
              "name": "SkyGridColumnAlignment"
            },
            "defaultValue": "'left'"
          },
          {
            "id": 81,
            "name": "description",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies a description for the column."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 40,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 98,
            "name": "descriptionChanges",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 135,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                }
              ],
              "qualifiedName": "EventEmitter",
              "package": "@angular/core",
              "name": "EventEmitter"
            },
            "defaultValue": "..."
          },
          {
            "id": 99,
            "name": "descriptionModelChanges",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 137,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "SkyGridColumnDescriptionModelChange"
                }
              ],
              "qualifiedName": "EventEmitter",
              "package": "@angular/core",
              "name": "EventEmitter"
            },
            "defaultValue": "..."
          },
          {
            "id": 82,
            "name": "excludeFromHighlighting",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Indicates whether to disable the highlighting of search text in the column.",
              "tags": [
                {
                  "tag": "default",
                  "text": "false\n"
                }
              ]
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 47,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          },
          {
            "id": 83,
            "name": "field",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies the property to retrieve cell information from an entry on the grid `data` array.\nYou must provide either the `id` or `field` property for every column,\nbut do not provide both. If `id` does not exist on a column, then `field` is the entry\nfor the grid `selectedColumnIds` array."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 56,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 84,
            "name": "heading",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies text to display in the column header."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 62,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 100,
            "name": "headingChanges",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 140,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                }
              ],
              "qualifiedName": "EventEmitter",
              "package": "@angular/core",
              "name": "EventEmitter"
            },
            "defaultValue": "..."
          },
          {
            "id": 101,
            "name": "headingModelChanges",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 142,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "SkyGridColumnHeadingModelChange"
                }
              ],
              "qualifiedName": "EventEmitter",
              "package": "@angular/core",
              "name": "EventEmitter"
            },
            "defaultValue": "..."
          },
          {
            "id": 85,
            "name": "hidden",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Indicates whether the column is initially hidden when grid `selectedColumnIds` are not provided.",
              "tags": [
                {
                  "tag": "default",
                  "text": "false\n"
                }
              ]
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 69,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          },
          {
            "id": 86,
            "name": "id",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies a unique ID for the column. You must provide either the `id` or `field` property\nfor every column, but do not provide both. If `field` does not exist on a column,\nthen the `id` property retrieves cell information from an entry on the grid `data` array."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 77,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 87,
            "name": "inlineHelpPopover",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies a template to display inside an inline help popup for this column."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 83,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          },
          {
            "id": 102,
            "name": "inlineHelpPopoverModelChanges",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 145,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "SkyGridColumnInlineHelpPopoverModelChange"
                }
              ],
              "qualifiedName": "EventEmitter",
              "package": "@angular/core",
              "name": "EventEmitter"
            },
            "defaultValue": "..."
          },
          {
            "id": 88,
            "name": "isSortable",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Indicates whether the column sorts the grid when users click the column header.",
              "tags": [
                {
                  "tag": "default",
                  "text": "true\n"
                }
              ]
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 90,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "defaultValue": "true"
          },
          {
            "id": 89,
            "name": "locked",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Indicates whether the column is locked. The intent is to display locked columns first\non the left side of the grid. If set to `true`, then users cannot drag the column\nto another position and or drag other columns before the locked column.",
              "tags": [
                {
                  "tag": "default",
                  "text": "false\n"
                }
              ]
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 99,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            }
          },
          {
            "id": 90,
            "name": "searchFunction",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {
                  "bindingPropertyName": "'search'"
                }
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 108,
                "character": 9
              }
            ],
            "type": {
              "type": "reflection",
              "declaration": {
                "id": 91,
                "name": "__type",
                "kind": 65536,
                "kindString": "Type literal",
                "flags": {},
                "signatures": [
                  {
                    "id": 92,
                    "name": "__type",
                    "kind": 4096,
                    "kindString": "Call signature",
                    "flags": {},
                    "comment": {
                      "shortText": "Specifies a search function to apply for the specific column. By default,\nthe column executes a string compare on the column data.",
                      "tags": [
                        {
                          "tag": "default",
                          "text": "(value, searchText) => value.toString().toLowerCase().indexOf(searchText) !== -1\n"
                        }
                      ]
                    },
                    "parameters": [
                      {
                        "id": 93,
                        "name": "value",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      },
                      {
                        "id": 94,
                        "name": "searchText",
                        "kind": 32768,
                        "kindString": "Parameter",
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ]
              }
            },
            "defaultValue": "..."
          },
          {
            "id": 96,
            "name": "templateInput",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies a template for a column. This can be assigned as a reference\nto the `template` attribute, or it can be assigned as a child of the `template` element\ninside the `sky-grid-column` component. The template has access to the `value` variable,\nwhich contains the value passed to the column, and the `row` variable, which contains\nthe entire row data."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {
                  "bindingPropertyName": "'template'"
                }
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 126,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "qualifiedName": "TemplateRef",
              "package": "@angular/core",
              "name": "TemplateRef"
            }
          },
          {
            "id": 97,
            "name": "width",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies the width of the column in pixels.\nIf undefined, the column width is evenly distributed."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 133,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          },
          {
            "id": 107,
            "name": "template",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 180,
                "character": 13
              }
            ],
            "getSignature": [
              {
                "id": 108,
                "name": "template",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ],
                  "qualifiedName": "TemplateRef",
                  "package": "@angular/core",
                  "name": "TemplateRef"
                }
              }
            ]
          },
          {
            "id": 104,
            "name": "ngOnChanges",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
                "line": 151,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 105,
                "name": "ngOnChanges",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 106,
                    "name": "changes",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "SimpleChanges",
                      "package": "@angular/core",
                      "name": "SimpleChanges"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "name": "OnChanges.ngOnChanges"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "name": "OnChanges.ngOnChanges"
            }
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [78]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              80, 81, 98, 99, 82, 83, 84, 100, 101, 85, 86, 87, 102, 88, 89, 90,
              96, 97
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [107]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [104]
          }
        ],
        "sources": [
          {
            "fileName": "projects/grids/src/modules/grid/grid-column.component.ts",
            "line": 27,
            "character": 13
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "qualifiedName": "OnChanges",
            "package": "@angular/core",
            "name": "OnChanges"
          }
        ]
      },
      {
        "id": 113,
        "name": "SkyGridComponent",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "tags": [
            {
              "tag": "deprecated",
              "text": "`SkyGridComponent` and its features are deprecated. We recommend using the data grid instead. For more information, see https://developer.blackbaud.com/skyux/components/data-grid\n"
            }
          ]
        },
        "decorators": [
          {
            "name": "Component",
            "type": {
              "type": "reference",
              "qualifiedName": "ComponentDecorator",
              "package": "@angular/core",
              "name": "Component"
            },
            "arguments": {
              "obj": "{\n  selector: 'sky-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss'],\n  viewProviders: [DragulaService],\n  providers: [SkyGridAdapterService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}"
            }
          }
        ],
        "children": [
          {
            "id": 114,
            "name": "constructor",
            "kind": 512,
            "kindString": "Constructor",
            "flags": {},
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 344,
                "character": 2
              }
            ],
            "signatures": [
              {
                "id": 115,
                "name": "new SkyGridComponent",
                "kind": 16384,
                "kindString": "Constructor signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 116,
                    "name": "affixService",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyAffixService"
                    }
                  },
                  {
                    "id": 117,
                    "name": "changeDetector",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "ChangeDetectorRef",
                      "package": "@angular/core",
                      "name": "ChangeDetectorRef"
                    }
                  },
                  {
                    "id": 118,
                    "name": "dragulaService",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "DragulaService",
                      "package": "ng2-dragula",
                      "name": "DragulaService"
                    }
                  },
                  {
                    "id": 119,
                    "name": "gridAdapter",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyGridAdapterService"
                    }
                  },
                  {
                    "id": 120,
                    "name": "overlayService",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyOverlayService"
                    }
                  },
                  {
                    "id": 121,
                    "name": "skyWindow",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyAppWindowRef"
                    }
                  },
                  {
                    "id": 122,
                    "name": "uiConfigService",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyUIConfigService"
                    }
                  },
                  {
                    "id": 123,
                    "name": "logger",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyLogService"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "id": 113,
                  "name": "SkyGridComponent"
                }
              }
            ]
          },
          {
            "id": 154,
            "name": "columnResizeStep",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 293,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "defaultValue": "10"
          },
          {
            "id": 148,
            "name": "columnWidthChange",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Fires when the width of a column changes."
            },
            "decorators": [
              {
                "name": "Output",
                "type": {
                  "type": "reference",
                  "qualifiedName": "OutputDecorator",
                  "package": "@angular/core",
                  "name": "Output"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 256,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "id": 40,
                    "name": "SkyGridColumnWidthModelChange"
                  }
                }
              ],
              "qualifiedName": "EventEmitter",
              "package": "@angular/core",
              "name": "EventEmitter"
            },
            "defaultValue": "..."
          },
          {
            "id": 155,
            "name": "currentSortField",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 294,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "ListSortFieldSelectorModel"
                }
              ],
              "qualifiedName": "BehaviorSubject",
              "package": "rxjs",
              "name": "BehaviorSubject"
            }
          },
          {
            "id": 128,
            "name": "data",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies the data for the grid. Each item requires an `id` and a property that maps\nto the `field` or `id` property of each column in the grid."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 109,
                "character": 9
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          },
          {
            "id": 156,
            "name": "displayedColumns",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 295,
                "character": 9
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "name": "SkyGridColumnModel"
              }
            }
          },
          {
            "id": 157,
            "name": "dragulaGroupName",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 296,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 129,
            "name": "enableMultiselect",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Indicates whether to enable the multiselect feature to display a column of\ncheckboxes on the left side of the grid. You can specify a unique ID with\nthe `multiselectRowId` property, but multiselect defaults to the `id` property on\nthe `data` object.",
              "tags": [
                {
                  "tag": "default",
                  "text": "false\n"
                }
              ]
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 119,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "defaultValue": "false"
          },
          {
            "id": 130,
            "name": "fit",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies how the grid fits to its parent. The valid options are `width`,\nwhich fits the grid to the parent's full width, and `scroll`, which allows the grid\nto exceed the parent's width. If the grid does not have enough columns to fill\nthe parent's width, it always stretches to the parent's full width.",
              "tags": [
                {
                  "tag": "default",
                  "text": "\"width\"\n"
                }
              ]
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 129,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            },
            "defaultValue": "'width'"
          },
          {
            "id": 158,
            "name": "gridId",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 297,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "defaultValue": "++nextId"
          },
          {
            "id": 131,
            "name": "hasToolbar",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Indicates whether to display a toolbar with the grid."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 135,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "defaultValue": "false"
          },
          {
            "id": 132,
            "name": "height",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies the height of the grid."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 141,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          },
          {
            "id": 133,
            "name": "highlightText",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies text to highlight within the grid.\nTypically, this property is used in conjunction with search."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 148,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 160,
            "name": "items",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 299,
                "character": 9
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          },
          {
            "id": 161,
            "name": "maxColWidth",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 300,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "defaultValue": "9999"
          },
          {
            "id": 134,
            "name": "messageStream",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Provides an observable to send commands to the grid."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 154,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 44,
                  "name": "SkyGridMessage"
                }
              ],
              "qualifiedName": "Subject",
              "package": "rxjs",
              "name": "Subject"
            },
            "defaultValue": "..."
          },
          {
            "id": 162,
            "name": "minColWidth",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 301,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            },
            "defaultValue": "50"
          },
          {
            "id": 135,
            "name": "multiselectRowId",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies a unique ID that matches a property on the `data` object.\nBy default, this property uses the `id` property."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 161,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 149,
            "name": "multiselectSelectionChange",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Fires when the selection of multiselect checkboxes changes.\nEmits an array of IDs for the selected rows based on the `multiselectRowId` property\nthat the consumer provides."
            },
            "decorators": [
              {
                "name": "Output",
                "type": {
                  "type": "reference",
                  "qualifiedName": "OutputDecorator",
                  "package": "@angular/core",
                  "name": "Output"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 266,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 66,
                  "name": "SkyGridSelectedRowsModelChange"
                }
              ],
              "qualifiedName": "EventEmitter",
              "package": "@angular/core",
              "name": "EventEmitter"
            },
            "defaultValue": "..."
          },
          {
            "id": 159,
            "name": "rowDeleteConfigs",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 298,
                "character": 9
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "name": "SkyGridRowDeleteConfig"
              }
            },
            "defaultValue": "[]"
          },
          {
            "id": 136,
            "name": "rowHighlightedId",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies the ID of the row to highlight. The ID matches the `id` property\nof the `data` object. Typically, this property is used in conjunction with\nthe flyout component to indicate the currently selected row."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 169,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 152,
            "name": "selectedColumnIdsChange",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Fires when the columns to display in the grid change or when the order of the columns changes.\nThe event emits an array of IDs for the displayed columns that reflects the column order."
            },
            "decorators": [
              {
                "name": "Output",
                "type": {
                  "type": "reference",
                  "qualifiedName": "OutputDecorator",
                  "package": "@angular/core",
                  "name": "Output"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 285,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "qualifiedName": "EventEmitter",
              "package": "@angular/core",
              "name": "EventEmitter"
            },
            "defaultValue": "..."
          },
          {
            "id": 145,
            "name": "settingsKey",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies a unique key for the UI Config Service to retrieve stored settings from a database.\nThe UI Config Service saves configuration settings for users and returns\n`selectedColumnIds` to preserve the columns to display and the preferred column order. You  must provide `id` values for your `sky-grid-column` elements because the UI Config Service depends on those values to organize columns based on user settings. For more information about the UI Config Service, see [the sticky settings documentation](https://developer.blackbaud.com/skyux/learn/get-started/sticky-settings)."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 232,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 163,
            "name": "showResizeBar",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 302,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "defaultValue": "false"
          },
          {
            "id": 164,
            "name": "showTopScroll",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 303,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "boolean"
            },
            "defaultValue": "false"
          },
          {
            "id": 146,
            "name": "sortField",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Displays a caret in the column that was used to sort the grid. This is particularly useful\nwhen you programmatically sort data and want to visually indicate how the grid was sorted.\nThis property accepts a `ListSortFieldSelectorModel` value with the following properties:\n- `fieldSelector` Represents the current sort field. This property accepts `string` values.\n- `descending` Indicates whether to sort in descending order. The caret that visually\nindicates the sort order points down for descending order and up for ascending order.\nThis property accepts `boolean` values. Default is `false`."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 244,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "name": "ListSortFieldSelectorModel"
            }
          },
          {
            "id": 153,
            "name": "sortFieldChange",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Fires when the active sort field changes."
            },
            "decorators": [
              {
                "name": "Output",
                "type": {
                  "type": "reference",
                  "qualifiedName": "OutputDecorator",
                  "package": "@angular/core",
                  "name": "Output"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 291,
                "character": 9
              }
            ],
            "type": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "ListSortFieldSelectorModel"
                }
              ],
              "qualifiedName": "EventEmitter",
              "package": "@angular/core",
              "name": "EventEmitter"
            },
            "defaultValue": "..."
          },
          {
            "id": 147,
            "name": "width",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isPublic": true
            },
            "comment": {
              "shortText": "Specifies the width of the grid in pixels."
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 250,
                "character": 9
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          },
          {
            "id": 124,
            "name": "columns",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isPublic": true
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 89,
                "character": 13
              }
            ],
            "getSignature": [
              {
                "id": 125,
                "name": "columns",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Specifies columns and column properties for the grid."
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "reference",
                    "name": "SkyGridColumnModel"
                  }
                }
              }
            ],
            "setSignature": [
              {
                "id": 126,
                "name": "columns",
                "kind": 1048576,
                "kindString": "Set signature",
                "flags": {},
                "comment": {
                  "shortText": "Specifies columns and column properties for the grid."
                },
                "parameters": [
                  {
                    "id": 127,
                    "name": "newColumns",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "reference",
                        "name": "SkyGridColumnModel"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 137,
            "name": "selectedColumnIds",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isPublic": true
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 176,
                "character": 13
              }
            ],
            "getSignature": [
              {
                "id": 138,
                "name": "selectedColumnIds",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Specifies the columns to display in the grid based on the `id` or `field` properties\nof the columns. If no columns are specified, then the grid displays all columns."
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ],
            "setSignature": [
              {
                "id": 139,
                "name": "selectedColumnIds",
                "kind": 1048576,
                "kindString": "Set signature",
                "flags": {},
                "comment": {
                  "shortText": "Specifies the columns to display in the grid based on the `id` or `field` properties\nof the columns. If no columns are specified, then the grid displays all columns."
                },
                "parameters": [
                  {
                    "id": 140,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 141,
            "name": "selectedRowIds",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isPublic": true
            },
            "decorators": [
              {
                "name": "Input",
                "type": {
                  "type": "reference",
                  "qualifiedName": "InputDecorator",
                  "package": "@angular/core",
                  "name": "Input"
                },
                "arguments": {}
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 214,
                "character": 13
              }
            ],
            "getSignature": [
              {
                "id": 142,
                "name": "selectedRowIds",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "comment": {
                  "shortText": "Specifies a set of IDs for the rows to select in a multiselect grid.\nThe IDs match the `id` properties of the `data` objects.\nRows with IDs that are not included are de-selected in the grid."
                },
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ],
            "setSignature": [
              {
                "id": 143,
                "name": "selectedRowIds",
                "kind": 1048576,
                "kindString": "Set signature",
                "flags": {},
                "comment": {
                  "shortText": "Specifies a set of IDs for the rows to select in a multiselect grid.\nThe IDs match the `id` properties of the `data` objects.\nRows with IDs that are not included are de-selected in the grid."
                },
                "parameters": [
                  {
                    "id": 144,
                    "name": "value",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 165,
            "name": "tableWidth",
            "kind": 262144,
            "kindString": "Accessor",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 305,
                "character": 13
              }
            ],
            "getSignature": [
              {
                "id": 166,
                "name": "tableWidth",
                "kind": 524288,
                "kindString": "Get signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            ]
          },
          {
            "id": 276,
            "name": "cancelRowDelete",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 779,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 277,
                "name": "cancelRowDelete",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 278,
                    "name": "id",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 279,
            "name": "confirmRowDelete",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 788,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 280,
                "name": "confirmRowDelete",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 281,
                    "name": "id",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 225,
            "name": "getAriaSortDirection",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 562,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 226,
                "name": "getAriaSortDirection",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 227,
                    "name": "column",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyGridColumnModel"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ],
                  "qualifiedName": "Observable",
                  "package": "rxjs",
                  "name": "Observable"
                }
              }
            ]
          },
          {
            "id": 212,
            "name": "getCaretIconNames",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 498,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 213,
                "name": "getCaretIconNames",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 214,
                    "name": "column",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyGridColumnModel"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ]
          },
          {
            "id": 228,
            "name": "getCaretVisibility",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 577,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 229,
                "name": "getCaretVisibility",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 230,
                    "name": "columnField",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ],
                  "qualifiedName": "Observable",
                  "package": "rxjs",
                  "name": "Observable"
                }
              }
            ]
          },
          {
            "id": 231,
            "name": "getHelpInlineClass",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 586,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 232,
                "name": "getHelpInlineClass",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 233,
                    "name": "columnField",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  ],
                  "qualifiedName": "Observable",
                  "package": "rxjs",
                  "name": "Observable"
                }
              }
            ]
          },
          {
            "id": 282,
            "name": "getRowDeleteItem",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 793,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 283,
                "name": "getRowDeleteItem",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 284,
                    "name": "id",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "SkyGridRowDeleteConfig"
                }
              }
            ]
          },
          {
            "id": 273,
            "name": "getRowHeight",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 775,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 274,
                "name": "getRowHeight",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 275,
                    "name": "index",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ]
          },
          {
            "id": 222,
            "name": "getSortDirection",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 549,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 223,
                "name": "getSortDirection",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 224,
                    "name": "columnField",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  ],
                  "qualifiedName": "Observable",
                  "package": "rxjs",
                  "name": "Observable"
                }
              }
            ]
          },
          {
            "id": 207,
            "name": "getTableClassNames",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 474,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 208,
                "name": "getTableClassNames",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ]
          },
          {
            "id": 209,
            "name": "getTableHeaderClassNames",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 488,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 210,
                "name": "getTableHeaderClassNames",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 211,
                    "name": "column",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyGridColumnModel"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ]
          },
          {
            "id": 205,
            "name": "getTopScrollWidth",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 470,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 206,
                "name": "getTopScrollWidth",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ]
          },
          {
            "id": 270,
            "name": "isRowHighlighted",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 768,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 271,
                "name": "isRowHighlighted",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 272,
                    "name": "id",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            ]
          },
          {
            "id": 194,
            "name": "ngAfterContentInit",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 377,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 195,
                "name": "ngAfterContentInit",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "name": "AfterContentInit.ngAfterContentInit"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "name": "AfterContentInit.ngAfterContentInit"
            }
          },
          {
            "id": 196,
            "name": "ngAfterViewInit",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 398,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 197,
                "name": "ngAfterViewInit",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "name": "AfterViewInit.ngAfterViewInit"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "name": "AfterViewInit.ngAfterViewInit"
            }
          },
          {
            "id": 198,
            "name": "ngOnChanges",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 402,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 199,
                "name": "ngOnChanges",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 200,
                    "name": "changes",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "SimpleChanges",
                      "package": "@angular/core",
                      "name": "SimpleChanges"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "name": "OnChanges.ngOnChanges"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "name": "OnChanges.ngOnChanges"
            }
          },
          {
            "id": 201,
            "name": "ngOnDestroy",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 449,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 202,
                "name": "ngOnDestroy",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "name": "OnDestroy.ngOnDestroy"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "name": "OnDestroy.ngOnDestroy"
            }
          },
          {
            "id": 192,
            "name": "ngOnInit",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 369,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 193,
                "name": "ngOnInit",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                },
                "implementationOf": {
                  "type": "reference",
                  "name": "OnInit.ngOnInit"
                }
              }
            ],
            "implementationOf": {
              "type": "reference",
              "name": "OnInit.ngOnInit"
            }
          },
          {
            "id": 291,
            "name": "onGridScroll",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 816,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 292,
                "name": "onGridScroll",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 293,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 251,
            "name": "onInputChangeResizeCol",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 702,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 252,
                "name": "onInputChangeResizeCol",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 253,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "Event",
                      "package": "typescript",
                      "name": "Event"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 215,
            "name": "onKeydown",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 513,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 216,
                "name": "onKeydown",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 217,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "KeyboardEvent",
                      "package": "typescript",
                      "name": "KeyboardEvent"
                    }
                  },
                  {
                    "id": 218,
                    "name": "column",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyGridColumnModel"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 248,
            "name": "onKeydownResizeCol",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 692,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 249,
                "name": "onKeydownResizeCol",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 250,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "KeyboardEvent",
                      "package": "typescript",
                      "name": "KeyboardEvent"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 234,
            "name": "onMultiselectCheckboxChange",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 594,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 235,
                "name": "onMultiselectCheckboxChange",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 245,
            "name": "onResizeColumnStart",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 645,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 246,
                "name": "onResizeColumnStart",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 247,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "MouseEvent",
                      "package": "typescript",
                      "name": "MouseEvent"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 257,
            "name": "onResizeHandleBlur",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 729,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 258,
                "name": "onResizeHandleBlur",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 259,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "Event",
                      "package": "typescript",
                      "name": "Event"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 260,
            "name": "onResizeHandleFocus",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 733,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 261,
                "name": "onResizeHandleFocus",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 262,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "KeyboardEvent",
                      "package": "typescript",
                      "name": "KeyboardEvent"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 254,
            "name": "onResizeHandleMove",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 711,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 255,
                "name": "onResizeHandleMove",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 256,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "MouseEvent",
                      "package": "typescript",
                      "name": "MouseEvent"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 263,
            "name": "onResizeHandleRelease",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 742,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 264,
                "name": "onResizeHandleRelease",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 265,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "qualifiedName": "MouseEvent",
                      "package": "typescript",
                      "name": "MouseEvent"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 266,
            "name": "onRowClick",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 754,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 267,
                "name": "onRowClick",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 268,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  },
                  {
                    "id": 269,
                    "name": "selectedItem",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "ListItemModel"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 288,
            "name": "onTopScroll",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 802,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 289,
                "name": "onTopScroll",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 290,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 285,
            "name": "onTouchMove",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 798,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 286,
                "name": "onTouchMove",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 287,
                    "name": "event",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 203,
            "name": "onWindowResize",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "decorators": [
              {
                "name": "HostListener",
                "type": {
                  "type": "reference",
                  "qualifiedName": "HostListenerDecorator",
                  "package": "@angular/core",
                  "name": "HostListener"
                },
                "arguments": {
                  "eventName": "'window:resize'"
                }
              }
            ],
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 466,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 204,
                "name": "onWindowResize",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 219,
            "name": "sortByColumn",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 520,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 220,
                "name": "sortByColumn",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 221,
                    "name": "column",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyGridColumnModel"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 242,
            "name": "updateColumnDescription",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 630,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 243,
                "name": "updateColumnDescription",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 244,
                    "name": "change",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyGridColumnDescriptionModelChange"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 236,
            "name": "updateColumnHeading",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 598,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 237,
                "name": "updateColumnHeading",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 238,
                    "name": "change",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyGridColumnHeadingModelChange"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          },
          {
            "id": 239,
            "name": "updateInlineHelpPopover",
            "kind": 2048,
            "kindString": "Method",
            "flags": {
              "isPublic": true
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/grid.component.ts",
                "line": 613,
                "character": 9
              }
            ],
            "signatures": [
              {
                "id": 240,
                "name": "updateInlineHelpPopover",
                "kind": 4096,
                "kindString": "Call signature",
                "flags": {},
                "parameters": [
                  {
                    "id": 241,
                    "name": "change",
                    "kind": 32768,
                    "kindString": "Parameter",
                    "flags": {},
                    "type": {
                      "type": "reference",
                      "name": "SkyGridColumnInlineHelpPopoverModelChange"
                    }
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "void"
                }
              }
            ]
          }
        ],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [114]
          },
          {
            "title": "Properties",
            "kind": 1024,
            "children": [
              154, 148, 155, 128, 156, 157, 129, 130, 158, 131, 132, 133, 160,
              161, 134, 162, 135, 149, 159, 136, 152, 145, 163, 164, 146, 153,
              147
            ]
          },
          {
            "title": "Accessors",
            "kind": 262144,
            "children": [124, 137, 141, 165]
          },
          {
            "title": "Methods",
            "kind": 2048,
            "children": [
              276, 279, 225, 212, 228, 231, 282, 273, 222, 207, 209, 205, 270,
              194, 196, 198, 201, 192, 291, 251, 215, 248, 234, 245, 257, 260,
              254, 263, 266, 288, 285, 203, 219, 242, 236, 239
            ]
          }
        ],
        "sources": [
          {
            "fileName": "projects/grids/src/modules/grid/grid.component.ts",
            "line": 82,
            "character": 13
          }
        ],
        "implementedTypes": [
          {
            "type": "reference",
            "qualifiedName": "OnInit",
            "package": "@angular/core",
            "name": "OnInit"
          },
          {
            "type": "reference",
            "qualifiedName": "AfterContentInit",
            "package": "@angular/core",
            "name": "AfterContentInit"
          },
          {
            "type": "reference",
            "qualifiedName": "AfterViewInit",
            "package": "@angular/core",
            "name": "AfterViewInit"
          },
          {
            "type": "reference",
            "qualifiedName": "OnChanges",
            "package": "@angular/core",
            "name": "OnChanges"
          },
          {
            "type": "reference",
            "qualifiedName": "OnDestroy",
            "package": "@angular/core",
            "name": "OnDestroy"
          }
        ]
      },
      {
        "id": 1,
        "name": "SkyGridModule",
        "kind": 128,
        "kindString": "Class",
        "flags": {},
        "comment": {
          "tags": [
            {
              "tag": "deprecated",
              "text": "`SkyGridComponent` and its features are deprecated. We recommend using the data grid instead. For more information, see https://developer.blackbaud.com/skyux/components/data-grid\n"
            }
          ]
        },
        "decorators": [
          {
            "name": "NgModule",
            "type": {
              "type": "reference",
              "qualifiedName": "NgModuleDecorator",
              "package": "@angular/core",
              "name": "NgModule"
            },
            "arguments": {
              "obj": "{\n  declarations: [\n    SkyGridComponent,\n    SkyGridColumnComponent,\n    SkyGridCellComponent,\n  ],\n  imports: [\n    CommonModule,\n    DragulaModule,\n    FormsModule,\n    SkyAffixModule,\n    SkyCheckboxModule,\n    SkyGridsResourcesModule,\n    SkyHelpInlineModule,\n    SkyIconModule,\n    SkyInlineDeleteModule,\n    SkyOverlayModule,\n    SkyPopoverModule,\n    SkyTextHighlightModule,\n  ],\n  exports: [SkyGridComponent, SkyGridColumnComponent],\n}"
            }
          }
        ],
        "children": [],
        "groups": [
          {
            "title": "Constructors",
            "kind": 512,
            "children": [2]
          }
        ],
        "sources": [
          {
            "fileName": "projects/grids/src/modules/grid/grid.module.ts",
            "line": 47,
            "character": 13
          }
        ]
      },
      {
        "id": 40,
        "name": "SkyGridColumnWidthModelChange",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "tags": [
            {
              "tag": "deprecated",
              "text": "`SkyGridComponent` and its features are deprecated. We recommend using the data grid instead. For more information, see https://developer.blackbaud.com/skyux/components/data-grid\n"
            }
          ]
        },
        "children": [
          {
            "id": 42,
            "name": "field",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Specifies the field of the column."
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/types/grid-column-width-model-change.ts",
                "line": 13,
                "character": 2
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 41,
            "name": "id",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Specifies the id of the column."
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/types/grid-column-width-model-change.ts",
                "line": 8,
                "character": 2
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          {
            "id": 43,
            "name": "width",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "Specifies the width of the column in pixels."
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/types/grid-column-width-model-change.ts",
                "line": 18,
                "character": 2
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "number"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [42, 41, 43]
          }
        ],
        "sources": [
          {
            "fileName": "projects/grids/src/modules/grid/types/grid-column-width-model-change.ts",
            "line": 4,
            "character": 17
          }
        ]
      },
      {
        "id": 44,
        "name": "SkyGridMessage",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "tags": [
            {
              "tag": "deprecated",
              "text": "`SkyGridComponent` and its features are deprecated. We recommend using the data grid instead. For more information, see https://developer.blackbaud.com/skyux/components/data-grid\n"
            }
          ]
        },
        "children": [
          {
            "id": 45,
            "name": "type",
            "kind": 1024,
            "kindString": "Property",
            "flags": {},
            "comment": {
              "shortText": "Indicates what type of message is being sent."
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/types/grid-message.ts",
                "line": 10,
                "character": 2
              }
            ],
            "type": {
              "type": "reference",
              "id": 54,
              "name": "SkyGridMessageType"
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [45]
          }
        ],
        "sources": [
          {
            "fileName": "projects/grids/src/modules/grid/types/grid-message.ts",
            "line": 6,
            "character": 17
          }
        ]
      },
      {
        "id": 66,
        "name": "SkyGridSelectedRowsModelChange",
        "kind": 256,
        "kindString": "Interface",
        "flags": {},
        "comment": {
          "tags": [
            {
              "tag": "deprecated",
              "text": "`SkyGridComponent` and its features are deprecated. We recommend using the data grid instead. For more information, see https://developer.blackbaud.com/skyux/components/data-grid\n"
            }
          ]
        },
        "children": [
          {
            "id": 67,
            "name": "selectedRowIds",
            "kind": 1024,
            "kindString": "Property",
            "flags": {
              "isOptional": true
            },
            "comment": {
              "shortText": "Indicates the `id`s of the rows that are selected."
            },
            "sources": [
              {
                "fileName": "projects/grids/src/modules/grid/types/grid-selected-rows-model-change.ts",
                "line": 10,
                "character": 2
              }
            ],
            "type": {
              "type": "array",
              "elementType": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          }
        ],
        "groups": [
          {
            "title": "Properties",
            "kind": 1024,
            "children": [67]
          }
        ],
        "sources": [
          {
            "fileName": "projects/grids/src/modules/grid/types/grid-selected-rows-model-change.ts",
            "line": 6,
            "character": 17
          }
        ]
      },
      {
        "id": 27,
        "name": "SkyGridColumnAlignment",
        "kind": 4194304,
        "kindString": "Type alias",
        "flags": {},
        "comment": {
          "shortText": "Represents the horizontal alignment of the column's data and header.",
          "tags": [
            {
              "tag": "deprecated",
              "text": "`SkyGridComponent` and its features are deprecated. We recommend using the data grid instead. For more information, see https://developer.blackbaud.com/skyux/components/data-grid\n"
            }
          ]
        },
        "sources": [
          {
            "fileName": "projects/grids/src/modules/grid/types/grid-column-alignment.ts",
            "line": 5,
            "character": 12
          }
        ],
        "type": {
          "type": "union",
          "types": [
            {
              "type": "literal",
              "value": "left"
            },
            {
              "type": "literal",
              "value": "center"
            },
            {
              "type": "literal",
              "value": "right"
            }
          ]
        }
      }
    ],
    "groups": [
      {
        "title": "Enumerations",
        "kind": 8,
        "children": [54]
      },
      {
        "title": "Classes",
        "kind": 128,
        "children": [77, 113, 1]
      },
      {
        "title": "Interfaces",
        "kind": 256,
        "children": [40, 44, 66]
      },
      {
        "title": "Type aliases",
        "kind": 4194304,
        "children": [27]
      }
    ],
    "sources": [
      {
        "fileName": "index.ts",
        "line": 1,
        "character": 0
      }
    ]
  },
  "codeExamples": [
    {
      "fileName": "grid-demo.component.html",
      "filePath": "/projects/grids/documentation/code-examples/grid/basic/grid-demo.component.html",
      "rawContents": "<sky-grid\n  fit=\"scroll\"\n  [data]=\"data\"\n  (sortFieldChange)=\"onSortChangeForGrid($event)\"\n>\n  <sky-grid-column field=\"name\" heading=\"Name\"> </sky-grid-column>\n  <sky-grid-column field=\"email\" heading=\"Email\"> </sky-grid-column>\n  <sky-grid-column field=\"amount\" heading=\"Amount\"> </sky-grid-column>\n  <sky-grid-column field=\"status\" heading=\"Status\"> </sky-grid-column>\n</sky-grid>\n"
    },
    {
      "fileName": "grid-demo.component.ts",
      "filePath": "/projects/grids/documentation/code-examples/grid/basic/grid-demo.component.ts",
      "rawContents": "import { Component } from '@angular/core';\nimport { ListSortFieldSelectorModel } from '@skyux/list-builder-common';\n\n@Component({\n  selector: 'app-grid-demo',\n  templateUrl: './grid-demo.component.html',\n})\nexport class GridDemoComponent {\n  public data: any[] = [\n    {\n      id: '1',\n      name: 'Niels Bohr',\n      email: 'niels.bohr@example.com',\n      amount: 170.75,\n      status: 'Paid',\n    },\n    {\n      id: '2',\n      name: 'Ada Lovelace',\n      email: 'ada.lovelace@example.com',\n      amount: 114.13,\n      status: 'Paid',\n    },\n    {\n      id: '3',\n      name: 'Marie Curie',\n      email: 'marie.curie@example.com',\n      amount: 111,\n      status: 'Past due',\n    },\n    {\n      id: '4',\n      name: 'Barbara McClintock',\n      email: 'barbara.mcclintock@example.com',\n      amount: 84.63,\n      status: 'Paid',\n    },\n    {\n      id: '5',\n      name: 'Michael Faraday',\n      email: 'michael.faraday@example.com',\n      amount: 83.97,\n      status: 'Paid',\n    },\n    {\n      id: '6',\n      name: 'Enrico Fermi',\n      email: 'enrico.fermi@example.com',\n      amount: 74.5,\n      status: 'Past due',\n    },\n    {\n      id: '7',\n      name: 'Mae C. Jemison',\n      email: 'mae.jemison@example.com',\n      amount: 70.86,\n      status: 'Paid',\n    },\n  ];\n\n  public onSortChangeForGrid(activeSort: ListSortFieldSelectorModel): void {\n    this.data = this.sortGridData(activeSort, this.data);\n  }\n\n  private sortGridData(\n    activeSort: ListSortFieldSelectorModel,\n    data: any[]\n  ): any[] {\n    const sortField = activeSort.fieldSelector;\n    const descending = activeSort.descending;\n\n    return data\n      .sort((a: any, b: any) => {\n        let value1 = a[sortField];\n        let value2 = b[sortField];\n\n        if (value1 && typeof value1 === 'string') {\n          value1 = value1.toLowerCase();\n        }\n\n        if (value2 && typeof value2 === 'string') {\n          value2 = value2.toLowerCase();\n        }\n\n        if (value1 === value2) {\n          return 0;\n        }\n\n        let result = value1 > value2 ? 1 : -1;\n\n        if (descending) {\n          result *= -1;\n        }\n\n        return result;\n      })\n      .slice();\n  }\n}\n"
    },
    {
      "fileName": "grid-demo.module.ts",
      "filePath": "/projects/grids/documentation/code-examples/grid/basic/grid-demo.module.ts",
      "rawContents": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SkyGridModule } from '@skyux/grids';\n\nimport { GridDemoComponent } from './grid-demo.component';\n\n@NgModule({\n  imports: [CommonModule, SkyGridModule],\n  declarations: [GridDemoComponent],\n  exports: [GridDemoComponent],\n})\nexport class GridDemoModule {}\n"
    },
    {
      "fileName": "grid-demo.component.html",
      "filePath": "/projects/grids/documentation/code-examples/grid/column-template/grid-demo.component.html",
      "rawContents": "<sky-grid\n  fit=\"scroll\"\n  [data]=\"data\"\n  (sortFieldChange)=\"onSortChangeForGrid($event)\"\n>\n  <sky-grid-column field=\"name\" heading=\"Name\"> </sky-grid-column>\n  <sky-grid-column field=\"email\" heading=\"Email\"> </sky-grid-column>\n  <sky-grid-column\n    field=\"amount\"\n    heading=\"Amount\"\n    [heading]=\"asyncHeading | async\"\n  >\n  </sky-grid-column>\n  <sky-grid-column\n    field=\"status\"\n    heading=\"Status\"\n    [template]=\"customColumnTemplate\"\n  >\n  </sky-grid-column>\n</sky-grid>\n\n<ng-template let-value=\"value\" #customColumnTemplate>\n  <div [ngClass]=\"{ 'sky-text-danger': value === 'Past due' }\">\n    {{ value }}\n  </div>\n</ng-template>\n"
    },
    {
      "fileName": "grid-demo.component.ts",
      "filePath": "/projects/grids/documentation/code-examples/grid/column-template/grid-demo.component.ts",
      "rawContents": "import { Component, OnInit } from '@angular/core';\nimport { ListSortFieldSelectorModel } from '@skyux/list-builder-common';\n\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-grid-demo',\n  templateUrl: './grid-demo.component.html',\n})\nexport class GridDemoComponent implements OnInit {\n  public asyncHeading = new BehaviorSubject<string>('');\n\n  public data: any[] = [\n    {\n      id: '1',\n      name: 'Niels Bohr',\n      email: 'niels.bohr@example.com',\n      amount: 170.75,\n      status: 'Paid',\n    },\n    {\n      id: '2',\n      name: 'Ada Lovelace',\n      email: 'ada.lovelace@example.com',\n      amount: 114.13,\n      status: 'Paid',\n    },\n    {\n      id: '3',\n      name: 'Marie Curie',\n      email: 'marie.curie@example.com',\n      amount: 111,\n      status: 'Past due',\n    },\n    {\n      id: '4',\n      name: 'Barbara McClintock',\n      email: 'barbara.mcclintock@example.com',\n      amount: 84.63,\n      status: 'Paid',\n    },\n    {\n      id: '5',\n      name: 'Michael Faraday',\n      email: 'michael.faraday@example.com',\n      amount: 83.97,\n      status: 'Paid',\n    },\n    {\n      id: '6',\n      name: 'Enrico Fermi',\n      email: 'enrico.fermi@example.com',\n      amount: 74.5,\n      status: 'Past due',\n    },\n    {\n      id: '7',\n      name: 'Mae C. Jemison',\n      email: 'mae.jemison@example.com',\n      amount: 70.86,\n      status: 'Paid',\n    },\n  ];\n\n  public ngOnInit(): void {\n    // Simulate async request:\n    setTimeout(() => {\n      this.asyncHeading.next('Amount');\n    }, 1000);\n  }\n\n  public onSortChangeForGrid(activeSort: ListSortFieldSelectorModel): void {\n    this.data = this.sortGridData(activeSort, this.data);\n  }\n\n  private sortGridData(\n    activeSort: ListSortFieldSelectorModel,\n    data: any[]\n  ): any[] {\n    const sortField = activeSort.fieldSelector;\n    const descending = activeSort.descending;\n\n    return data\n      .sort((a: any, b: any) => {\n        let value1 = a[sortField];\n        let value2 = b[sortField];\n\n        if (value1 && typeof value1 === 'string') {\n          value1 = value1.toLowerCase();\n        }\n\n        if (value2 && typeof value2 === 'string') {\n          value2 = value2.toLowerCase();\n        }\n\n        if (value1 === value2) {\n          return 0;\n        }\n\n        let result = value1 > value2 ? 1 : -1;\n\n        if (descending) {\n          result *= -1;\n        }\n\n        return result;\n      })\n      .slice();\n  }\n}\n"
    },
    {
      "fileName": "grid-demo.module.ts",
      "filePath": "/projects/grids/documentation/code-examples/grid/column-template/grid-demo.module.ts",
      "rawContents": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SkyGridModule } from '@skyux/grids';\n\nimport { GridDemoComponent } from './grid-demo.component';\n\n@NgModule({\n  imports: [CommonModule, SkyGridModule],\n  declarations: [GridDemoComponent],\n  exports: [GridDemoComponent],\n})\nexport class GridDemoModule {}\n"
    },
    {
      "fileName": "grid-demo.component.html",
      "filePath": "/projects/grids/documentation/code-examples/grid/multiselect/grid-demo.component.html",
      "rawContents": "<sky-grid\n  [data]=\"data\"\n  [enableMultiselect]=\"true\"\n  [selectedRowIds]=\"selectedRowIds\"\n  (multiselectSelectionChange)=\"onMultiselectSelectionChange($event)\"\n  (sortFieldChange)=\"onSortChangeForGrid($event)\"\n>\n  <sky-grid-column field=\"name\" heading=\"Name\"></sky-grid-column>\n  <sky-grid-column field=\"email\" heading=\"Email\"></sky-grid-column>\n  <sky-grid-column field=\"amount\" heading=\"Amount\"></sky-grid-column>\n  <sky-grid-column field=\"status\" heading=\"Status\"></sky-grid-column>\n</sky-grid>\n\n<p>Selected rows (name property):</p>\n<p>\n  {{ selectedRows }}\n</p>\n"
    },
    {
      "fileName": "grid-demo.component.ts",
      "filePath": "/projects/grids/documentation/code-examples/grid/multiselect/grid-demo.component.ts",
      "rawContents": "import { ChangeDetectorRef, Component } from '@angular/core';\nimport { SkyGridSelectedRowsModelChange } from '@skyux/grids';\nimport { ListSortFieldSelectorModel } from '@skyux/list-builder-common';\n\n@Component({\n  selector: 'app-grid-demo',\n  templateUrl: './grid-demo.component.html',\n})\nexport class GridDemoComponent {\n  public data: any[] = [\n    {\n      id: '1',\n      name: 'Niels Bohr',\n      email: 'niels.bohr@example.com',\n      amount: 170.75,\n      status: 'Paid',\n    },\n    {\n      id: '2',\n      name: 'Ada Lovelace',\n      email: 'ada.lovelace@example.com',\n      amount: 114.13,\n      status: 'Paid',\n    },\n    {\n      id: '3',\n      name: 'Marie Curie',\n      email: 'marie.curie@example.com',\n      amount: 111,\n      status: 'Past due',\n    },\n    {\n      id: '4',\n      name: 'Barbara McClintock',\n      email: 'barbara.mcclintock@example.com',\n      amount: 84.63,\n      status: 'Paid',\n    },\n    {\n      id: '5',\n      name: 'Michael Faraday',\n      email: 'michael.faraday@example.com',\n      amount: 83.97,\n      status: 'Paid',\n    },\n    {\n      id: '6',\n      name: 'Enrico Fermi',\n      email: 'enrico.fermi@example.com',\n      amount: 74.5,\n      status: 'Past due',\n    },\n    {\n      id: '7',\n      name: 'Mae C. Jemison',\n      email: 'mae.jemison@example.com',\n      amount: 70.86,\n      status: 'Paid',\n    },\n  ];\n\n  public selectedRows: string;\n  public selectedRowIds: string[];\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n\n  public onMultiselectSelectionChange(\n    value: SkyGridSelectedRowsModelChange\n  ): void {\n    this.selectedRowIds = value.selectedRowIds.slice().sort();\n    this.selectedRows = this.data\n      .reduce((newArray, item) => {\n        if (value.selectedRowIds.indexOf(item.id) > -1) {\n          newArray.push(item.name);\n        }\n        return newArray;\n      }, [])\n      .sort();\n    this.changeDetector.markForCheck();\n  }\n\n  public onSortChangeForGrid(activeSort: ListSortFieldSelectorModel): void {\n    this.data = this.sortGridData(activeSort, this.data);\n    this.changeDetector.markForCheck();\n  }\n\n  private sortGridData(\n    activeSort: ListSortFieldSelectorModel,\n    data: any[]\n  ): any[] {\n    const sortField = activeSort.fieldSelector;\n    const descending = activeSort.descending;\n\n    return data\n      .sort((a: any, b: any) => {\n        let value1 = a[sortField];\n        let value2 = b[sortField];\n\n        if (value1 && typeof value1 === 'string') {\n          value1 = value1.toLowerCase();\n        }\n\n        if (value2 && typeof value2 === 'string') {\n          value2 = value2.toLowerCase();\n        }\n\n        if (value1 === value2) {\n          return 0;\n        }\n\n        let result = value1 > value2 ? 1 : -1;\n\n        if (descending) {\n          result *= -1;\n        }\n\n        return result;\n      })\n      .slice();\n  }\n}\n"
    },
    {
      "fileName": "grid-demo.module.ts",
      "filePath": "/projects/grids/documentation/code-examples/grid/multiselect/grid-demo.module.ts",
      "rawContents": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SkyGridModule } from '@skyux/grids';\n\nimport { GridDemoComponent } from './grid-demo.component';\n\n@NgModule({\n  imports: [CommonModule, SkyGridModule],\n  declarations: [GridDemoComponent],\n  exports: [GridDemoComponent],\n})\nexport class GridDemoModule {}\n"
    }
  ]
}
